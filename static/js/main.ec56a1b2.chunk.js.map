{"version":3,"sources":["StartPageFolder/MainContentStartPage.js","favicon.ico","StartPageFolder/modalLogIn.js","StartPageFolder/NavBarStart.js","StartPageFolder/StartPage.js","UserPageFolder/userNavBar.js","UserPageFolder/userPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainContentStartPage","useState","rowData","setRowData","rowDataTest","rowData2","fetch","then","e","json","data","i","length","xxx","coin","n","pc","price","p","toFixed","marketCap","mc","push","useEffect","setInterval","className","style","height","width","margin","border","rowSelection","field","sortable","filter","cellStyle","fontWeight","params","value","color","ModalLogIn","show","setShow","handleClose","show2","setShow2","handleShow2","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","class","for","type","id","placeholder","required","to","href","alert","NavBarStart","Navbar","collapseOnSelect","expand","bg","NavbarBrand","src","fav","background","NavbarToggle","NavbarCollapse","Nav","NavLink","NavDropdown","title","Item","Divider","StartPage","UserNavBar","marginRight","UserPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec56a1b2.chunk.js","sourcesContent":["import {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst MainContentStartPage = () => {\r\n        const [rowData, setRowData] = useState(null);\r\n\r\n\r\n        function rowDataTest() {\r\n            let rowData2 = [];\r\n            fetch(\"https://api.lunarcrush.com/v2?data=market&key=vhghf5jxd8fgotjykitjow&limit=100&sort=mc&desc=true\")\r\n            .then((e)=> {\r\n                return e.json();\r\n                })\r\n                .then((data) => {\r\n                    if(data){\r\n                        for (let i=0; i < data.data.length; i++) {\r\n                            var xxx = {coin: data.data[i].n, \"24/h\": data.data[i].pc, price: data.data[i].p.toFixed(2), marketCap: data.data[i].mc.toFixed(0)};\r\n                            rowData2.push(xxx);                     \r\n                        }\r\n                        setRowData(rowData2);\r\n                    }             \r\n                })\r\n        }\r\n\r\n        useEffect(() => {\r\n\r\n                rowDataTest();\r\n                setInterval(rowDataTest, 30000);\r\n        },[])\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        return (\r\n            \r\n                    <div className=\"ag-theme-alpine\" style={{height: \"600px\", width: \"80%\", margin: \"50px auto 0px\", border: \"1px solid red\"}}>\r\n                        <AgGridReact \r\n                            rowData={rowData}  \r\n                            rowSelection=\"single\"\r\n                            style={{height: \"100%\", width: \"50%\"}}\r\n                            \r\n                            >\r\n                            <AgGridColumn field=\"coin\" width=\"170px\" sortable= {true} filter={true} cellStyle={{fontWeight: \"\"}}></AgGridColumn>\r\n                            <AgGridColumn field= \"24/h\" \r\n                                            width=\"100%\"\r\n                                            sortable= {true} \r\n                                            cellStyle={(params) => { return params.value < 0 ? {color: \"red\"} : {color: \"green\"};\r\n                                \r\n                            }}></AgGridColumn>\r\n                            <AgGridColumn field=\"price\" width=\"130px\" sortable= {true} ></AgGridColumn>\r\n                            <AgGridColumn field=\"marketCap\" width=\"130px\" sortable= {true} ></AgGridColumn>\r\n                        </AgGridReact>\r\n                    </div>\r\n     \r\n        );\r\n};\r\n \r\nexport default MainContentStartPage;","export default __webpack_public_path__ + \"static/media/favicon.491ce101.ico\";","import { useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\n//import { NavLink } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavbarBrand, NavDropdown, NavLink } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ModalLogIn = () => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [show2, setShow2] = useState(false);\r\n    const handleClose2 = () => setShow2(false);\r\n    const handleShow2 = () => setShow2(true);\r\n\r\n    const handleClose1Show2 = () => {\r\n        handleClose();\r\n        handleShow2();\r\n    }\r\n    \r\n    return ( \r\n        <>\r\n            <Button style={{color: \"lightgrey\", border: \"none\"}} variant=\"dark\" className=\"navRightBut\" onClick={handleShow}>\r\n                LogIn\r\n            </Button>\r\n            <Button style={{color: \"lightgrey\", border: \"none\"}} variant=\"dark\" className=\"navRightBut\" onClick={handleShow2}>\r\n                SignUp\r\n            </Button>\r\n            <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>LogIn</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <div className=\"logIn-div\">\r\n                                <form class=\"px-4 py-3\">\r\n                                        <div class=\"form-group\">\r\n                                        <label for=\"exampleDropdownFormEmail1\">Email address</label>\r\n                                        <input type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail1\" placeholder=\"email@example.com\" required/>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                        <label for=\"exampleDropdownFormPassword1\">Password</label>\r\n                                        <input type=\"password\" class=\"form-control\" id=\"exampleDropdownFormPassword1\" placeholder=\"Password\" required/>\r\n                                        </div>\r\n                                        <div class=\"form-check\">\r\n                                        <input type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck\"/>\r\n                                        <label class=\"form-check-label\" for=\"dropdownCheck\">\r\n                                            Remember me\r\n                                        </label>\r\n                                        </div>\r\n                                        <button type=\"submit\" class=\"btn btn-primary\">LogIn</button>\r\n                                </form>\r\n                                <div class=\"dropdown-divider\"></div>\r\n                                <Link class=\"dropdown-item text-info\" to=\"#\" onClick={handleClose1Show2} >New around here? Sign up</Link>\r\n                                <a class=\"dropdown-item text-danger\" href=\"#\" onClick={() => alert(\"Bad luck! This option is not available yet :(\")}>Forgot password?</a>\r\n                        \r\n                        </div>\r\n                    </Modal.Body>\r\n                    {/* <Modal.Footer>\r\n                        <NavLink to=\"/logIn\" onClick={handleClose} style={{borderRadius: \"5px\"}} className=\"bg-primary text-white\">LogIn</NavLink>\r\n                    </Modal.Footer> */}\r\n            </Modal>\r\n\r\n            <Modal\r\n                    show={show2}\r\n                    onHide={handleClose2}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Welcome to CryptoFlo</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <div className=\"logIn-div\">\r\n                                        <form class=\"px-4 py-3\">\r\n                                                <div class=\"form-group\">\r\n                                                <label for=\"signUpEmail\">Email address</label>\r\n                                                <input type=\"email\" class=\"form-control\" id=\"signUpEmail\" placeholder=\"email@example.com\" required/>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                <label for=\"signUpPassword\">Password</label>\r\n                                                <input type=\"password\" class=\"form-control\" id=\"signUpPassword\" placeholder=\"Password\" required/>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                <label for=\"repeatSignUpPassword\">Repeat Password</label>\r\n                                                <input type=\"password\" class=\"form-control\" id=\"repeatSignUpPassword\" placeholder=\"Password\" required/>\r\n                                                </div>\r\n                                                <br />\r\n                                                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                                        </form>\r\n                            </div>\r\n                    </Modal.Body>\r\n                    {/* <Modal.Footer>\r\n                        <NavLink to=\"/\" onClick={handleClose} className=\"bg-primary text-white\">Save</NavLink>\r\n                    </Modal.Footer> */}\r\n            </Modal>\r\n    </>\r\n     );\r\n}\r\n \r\nexport default ModalLogIn;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport { Nav, Navbar, NavbarBrand, NavDropdown, NavLink } from 'react-bootstrap';\r\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\r\nimport NavbarToggle from 'react-bootstrap/esm/NavbarToggle';\r\nimport \"../index.css\";\r\nimport fav from '../favicon.ico';\r\nimport ModalLogIn from './modalLogIn';\r\n\r\nconst NavBarStart = () => {\r\n\r\n\r\n    return ( \r\n        <div>\r\n            \r\n\r\n            <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n \r\n                <NavbarBrand href=\"/user\" id=\"navBrand\"> <img src={fav} style={{height: \"25px\", margin: \"0px\", background: \"white\"}} />{\" \"}\r\n                                    CryptoFlo</NavbarBrand>\r\n                <NavbarToggle aria-controls=\"responsive-navbar-nav\" />\r\n                <NavbarCollapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                    <NavLink href=\"#features\">Features</NavLink>\r\n                    <NavLink href=\"#pricing\">Pricing</NavLink>\r\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">drop1</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">drop2</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">drop3</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated drop</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <ModalLogIn />\r\n                    </Nav>\r\n                </NavbarCollapse>\r\n            </Navbar>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NavBarStart;","import MainContentStartPage from \"./MainContentStartPage\";\r\nimport NavBarStart from \"./NavBarStart\";\r\n\r\nconst StartPage = () => {\r\n    return ( \r\n        <>\r\n            <NavBarStart />\r\n            <MainContentStartPage />\r\n        </>\r\n     );\r\n}\r\n \r\nexport default StartPage;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport { Nav, Navbar, NavbarBrand, NavDropdown, NavLink } from 'react-bootstrap';\r\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\r\nimport NavbarToggle from 'react-bootstrap/esm/NavbarToggle';\r\nimport \"../index.css\";\r\nimport fav from '../favicon.ico';\r\n\r\n\r\nconst UserNavBar = () => {\r\n    return ( \r\n        <div>\r\n                    <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n\r\n                        <NavbarBrand href=\"/user\" id=\"navBrand\"> <img src={fav} style={{height: \"25px\", margin: \"0px\", background: \"white\"}} />{\" \"}\r\n                                            CryptoFlo</NavbarBrand>\r\n                        <NavbarToggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <NavbarCollapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"me-auto\">\r\n                            <NavLink href=\"#features\">Features</NavLink>\r\n                            <NavLink href=\"#pricing\">Pricing</NavLink>\r\n                            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">drop1</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">drop2</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">drop3</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated drop</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            </Nav>\r\n                            <Nav>\r\n                                <NavLink href=\"/\" style={{marginRight: \"20px\"}}>LogOut</NavLink>\r\n                            </Nav>\r\n                        </NavbarCollapse>\r\n                    </Navbar>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default UserNavBar;","import UserNavBar from \"./userNavBar\";\r\n\r\nconst UserPage = () => {\r\n    return ( \r\n        <>\r\n            <UserNavBar />\r\n        </>\r\n     );\r\n}\r\n \r\nexport default UserPage;","\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport StartPage from \"./StartPageFolder/StartPage\";\nimport UserPage from './UserPageFolder/userPage';\n\n\nfunction App() {\n  return (\n  <Router>\n      <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\">\n                    <StartPage />\n          </Route> \n          <Route path=\"/user\">\n                    <UserPage />\n          </Route> \n      </Switch>\n      </div>\n  </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}